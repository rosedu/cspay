Sketch of an ods document, with page references in the specification.
- Temporary, of course. 
- Pages refered by #<number>
- Sections refered by $<sec.sub>
- Contents at #5 (if I see the tite page and abstract one more time, I'll
kill myself).
- Might go into the wiki to be referenced for a further discussion on
  the mailing list when it grows up.

Namespaces -- go in the root element. #33

* Document root #39
	<office:document> 
		- for standalone (single-file) documents
		- may contain all content models: metadata, application
		  settings, script, font declarations, style, auto
		  style, master style, body
	document root attributes #41
		- office:version - "1.0" or "1.1" probably
		- office:mimetype - important for standalone files
* Document metadata #42
	- office:meta
	- may be omitted or occur multiple times
	- pre-defined vs user-defined vs custom
* Body element and document types
	- spreadsheet documents, overview only #48
* Application settings #50
	- <office:settings>
	- may be divided into multiple <config:config-item-set>
	- items are defined with <config:config-item>
	- also may contain indexed or mapped configuration settings
* Scripts #54
	- single <office:scripts> element, containing <office:script>
	  elements
* Font face declarations #55
	- forwarded to $14.6
* Styles #55
	- common styles - those supported by applications
	- automatic styles - styles assigned by default to a content
	  element; will probably be the ones used in libspreadconv
	- master styles - headers, footers, backgrounds etc
	- may be CSS2 or XSLT
	- style tags #56
* Page styles and layout
	- page layout - size, margins, header and footer height etc
	- master page - template for other pages, static elements i.e.
	  headers and footers.

Metadata #59
------------
predefined #59
	- meta:generator - specifies application which last modified the
	  file; _should_ match definition for user agents specified in
	  $14.43 or RFC2616 and should allow for version numbers
	- dc:title - specifies document title (how utterly unsurprising)
	- dc:description - brief description of document
	- meta:creation-date - creation date and time
	- dc:language - language code according to standards #64
	- meta:editing-cycles - number of editing cycles document has
	  been through. Not needed, but since applications are supposed
	  to update it, I suppose it should be added.
	- meta:document-statistic #65
user-defined #67

Text content #69
Pragraph elements content #87
Text fields #99
Text indices #149

Tables #182
-----------
	- similar to HTML4 or XSL
	- contain groups of rows, which themselves contain cells
	- columns only contain description, not cells
	- rows may have variable number of cells
table:name 
table:style-name
	- references a style:style element of type table
	- defines cell width, background etc.
	- may be an automatic or a common style
table:print #185
	- specifies if a table is printed
	- if this is true, the range of cells must be specified in
	  table:print-ranges
table:table-row #186
	- table:number-rows-repeated  - specifies the number of
	  subsequent rows which are identical to this one. Should be
	  used at least to prevent blank rows from being blindly
	  repeated.
	- table:row-style - a style:style attribute with family
	  table-row (referenced by its table:style-name); can be
	  automatic or common
	- table:default-cell-style-name - cells that don't have a
	  table:style-style use this by default; 
	- table:visibility - whether the row is _visible_, invisible
	  because of not being included in a filter (_filter_), or
	  invisible because it was hidden by the user explicitly
	  (_collapse_)
table:table-cell, table:covered-table-cell #188
	- may contain pragraphs and other text elements, as well as
	  sub-tables
	- table:covered-table-cell specifies a cell that is covered by a
	  merged cell from a nearby row or column; in spreadsheet
	  applications it is common that it has content (?)
	- table:number-columns-repeated - specifies the number of
	  subsequent identical cells; they must not be merged.
	- table:number-columns-spanned, table:number-rows-spanned -
	  specify the number of cells left and down that are merged into
	  this one; the corresponding cells must then be of type
	  table:covered-table-cell
	- table:style-name - specifies style of cell; if not specified,
	  default row type and column type are checked in this order;
	  can be either automatic or common
	- table:content-validation-name - the name of a
	  table:content-validation which specifies the rules for a cell
	  validity check; if this element is not present, the cell may
	  have arbitrary content
	- table:formula #190 - forwarded to $8.3.1
	- may be part of matrices, which have special functions
	  associated to them
	- office:value-type - one of: float, percentage, currency, date,
	  time, boolean, string. For the first 3 (numeric values),
	  office:value tag defines their numeric value; similarly, there
	  is office:currency, office:date-value, office:time-value,
	  office:boolean-value and office:string-value; not sure if
	  actual text can substitute at least string-value
Advanced table model (?) #193
table:table-column #193
	- must be specified for every column; has style information,
	  including column width
	- table:number-columns-repeated
	- table:style-name - references a style:style; may be an
	  automatic or common style
	- table:visibility
	- table:default-cell-style-name - fallback for when neither the
	  cell, nor the associated row, have a style
Advanced tables #200
	- referencing table cells - [table_name].[column][row]
		- columns are alphanumeric (A..Z, AA..AZ, ..)
		- rows are numeric
		- table names containing spaces, dots or apostrophes are
		  quoted with apostrophes (')
	- absolute and relative cell addressing - only needed sometimes
		- "$" before every element, must have a table name
		- if differentiation is not required, the dollar sign is
		  dropped
	- cell range address - <top_left>:<bottom_right>
		- lists of cell ranges are space-separated, quoting
		  things when required
Advanced table cells #207
	- cell annotations - forwarded to $12.1
	- table:detective - contains information about relationships
	  between cells due to formulas and what to highlight. May
	  contain detective operation and highlighted range
	- table:operation - contained in a cell; specifies that
	  relations between cell and other cells should be made visible
	  in the UI
	  	- table:name - specifies name of detective operation;
		  may be: trace-dependents, remove-dependents,
		  trace-precedents, remove-precedents, or trace-errors
		- table:index - specifies order in which detective
		  operations are applied
	- table:highlighted-range - specifies cell range that is
	  highlighted beacause of a detective or because it contains an
	  error or invalid data
Spreadsheet document content #211
	- cell content validations #214

Common content #452
-------------------
Number format #453
	- style:num-prefix, style:num-suffix
	- style:num-format - 1, a, A, i, or I
	- 

Styles #479
-----------
style:style #479
	- style:name - uniquely identifies the style, along with
	  style:family
	- style:display-name - name as it should appear in the user
	  interface
	- style:family - possible values: paragraph, text, section,
	  table, table-column, table-row, table-cell, table-page, chart,
	  default, drawing-page, graphic, presentation, control, ruby
	- style:parent-style-name - cannot be an automatic style and it
	  has to exist; if a parent is not specified, a default defined
	  by the application will be used
	- style:data-style-name - a cell style can have an associated
	  data style; this only applies to automatic and common styles
	- style:class - arbitrary class, no strict meaning
	- formatting properties - forwarded to $15
Style mappings #483
	- specify conditional styles
Default styles #485
	- specify default formatiing properties for a certain style
	  family
	- exist for all style families
	- represented by <style:default-style>
	- only support attribute style:family
Page layout #485
Master pages #487
	- contain the content of headers and footers
	- only in documents and spreadsheets
	- hopefully not needed
Table templates #493
Font face declarations #496
	- similar to CSS2 and SVG, which are forwarded to $15.5
	- introduced by style:font-face (probably)
	- attributes include: svg:font-family, svg:font-style,
	  svg:font-variant, svg:font-weight, svg:font-stretch,
	  svg:font-size, etc. (long list)
	- style:name defines the unique style name, which can be used
	  inside styles for style:text-properties
Data styles #501
	- number style - number:number-style
		- can contain one of: number:number,
		  number:scientific-number, number:fraction, which
		  specify the display format
		- can also contain number:text, before or atfer the
		  above elements
		- can contain style:text-properties and style:map
		- specifications for number:number etc elements follow
	- currency style - number:currency-style #505
	- date style - number:date-style #508
		- can contain _one_ instance of the following (not a
		  complete list): number:day, number:month, number:year,
		  number:day-of-week, number:hours, number:minutes,
		  number:seconds, number:am-pm
		- can also contain number:text
		- can contain a style:text-properties and a style:map
	- boolean style #517
	- text style - number:text-style #517
		- can contain number:text-content, number:text,
		  style:text-properties, style:map
	- common data style attributes #519
		- style:name, style:display-name
		- number:automatic-order - with number:currency-style or
		  number:date-style; can be either true or false
	- common data style element attributes #523
		- may be used for localization
Text styles #525
	- test styles - style:style elements with the text family
	- paragraph styles - have the paragraph family
	- section styles - have the section family
Enhanced text styles #526
List style #535
Outline style #541
Table styles #543
	- styles with family table, table-column, table-row, table-cell
	- forwarded to $15.8

Formatting properties #561
--------------------------
Simple and complex formatting properties
	- when possible, attributes to the formatting property elements
	  are used; namespace fo is used for [XSL] attributes
	- if a property is too complex, it is represented by an XML
	  element
Text formatting properties #575
	- contained in style:text-properties
	- fo:color - the foreground color of text
	- style:font-name - a value declared in a style:font-face
	  element within the office:font-face-decls element
	- fo:font-family - may be used instead of style:font-name, but
	  it is not recomended
	- fo:font-size
	- fo:font-style - either normal, italic or oblique
	- style:text-underline-type - either none, single or double
	- style:text-underline-style - none, solid, etc; more at #587
	- fo:font-weight - normal, bold, or absolute values
	- fo:background-color - transparent or a color as in $7.7.2 XSL
	- fo:hyphenate - boolean to enable or disable auto-hyphenation
Paragraph formatting properties #594
	- contained in style:paragraph-properties
	- properties described can also be contained in other styles
	- fo:text-align - left, right, center, justify, start or end
Table formatting properties #622
	- contained in style:table-properties
Column formatting properties #626
	- contained in style:table-column-properties
	- style:column-width - may be measured in inches (seen in ex)
	- style:use-optimal-column-width - specifies whether the column
	  width should be recalculated if content in the column changes
Table row formatting properties #627
	- contained in style:table-row-properties
	- style:row-height and style:min-row-height
	- style:use-optimal-row-height
Table cell formatting properties #629
	- contained in style:table-cell-properties
	- style:vertical-align - either top, middle, bottom or automatic
	- fo:border, fo:border-{top,bottom,left,right}
		- from example, should contain a string with:
		- width (in inches etc)
		- line style (solid)
		- color (#000000)
Packages #709
--------
Manifest file #711
	- always stored at META-INF/manifest.xml
	- contains a list of all the files in the package
	- contains the media type of each file
	- if a file is encrypted, the information required to decrypt it
	  is also stored
	- namespace: urn:oasis:names:tc:opendocument:xmlns:manifest:1.0
	- root element - manifest
	- manifest:file-entry
		- manifest:full-path
		- manifest:size - only if encrypted
		- manifest:media-type (text/xml for xml files)
Mimetype #710
	- a package should contain a file (stream) called mimetype
	- should be the first stream in the zip file
	- shall not be compressed
	- shall not use an extra field in its header
	- mimetype for spreadsheets is
	  application/vnd.oasis.opendocument.spreadsheet #722
	
